# # This is a basic workflow to help you get started with Actions

# name: Development CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the development branch
#   push:
#     branches: [development]
#   pull_request:
#     branches: [development]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   tests:
#     runs-on: ubuntu-latest

#     # Service container to run with "laravel-test-withdb"
#     services:
#       # Label used to access the service container
#       mysql:
#         # Docker Hub image (also with version)
#         image: mysql:8.0
#         env:
#           MYSQL_ROOT_PASSWORD: "Password123"
#           MYSQL_DATABASE: db_test
#         ## map the "external" 33306 port with the "internal" 3306
#         ports:
#           - 33306:3306
#         # Set health checks to wait until mysql database has started (it takes some seconds to start)
#         options: >-
#           --health-cmd="mysqladmin ping"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=3


#     steps:
#       - uses: actions/checkout@v2

#       - name: Copy .env
#         run: php -r "file_exists('.env') || copy('.env.example', '.env');"

#       - name: Install Dependencies
#         run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

#       - name: Generate key
#         run: php artisan key:generate

#       - name: Directory Permissions
#         run: chmod -R 777 storage bootstrap/cache

#       - name: Execute tests (Unit and Feature tests) via PHPUnit
#         env:
#           DB_CONNECTION: mysql
#           DB_DATABASE: db_test
#           DB_PORT: 33306
#           DB_USER: root
#           DB_PASSWORD: "Password123"
#         run: php artisan test --parallel

#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2-beta
#         with:
#           node-version: "16"
#           check-latest: true

#       - name: Install NPM dependencies
#         run: npm install

#       - name: Compile assets for production
#         run: npm run prod

#   deploy:
#     needs: tests
#     runs-on: ubuntu-latest

#     steps:
#       - name: Deploy Events Don development application
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           port: ${{ secrets.SSH_PORT }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             export NVM_DIR="$HOME/.nvm"
#             [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#             [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
#             set -e
#             cd /home/dev/eventsdon
#             git pull origin development
#             php8.0 /usr/bin/composer install
#             npm install
#             npm run prod
#             php8.0 artisan migrate --force
#             php8.0 artisan config:cache
#             php8.0 artisan view:cache
#             php8.0 artisan queue:restart
#             echo 'Deployment successful to server!'
